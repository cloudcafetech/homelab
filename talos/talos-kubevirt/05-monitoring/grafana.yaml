apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubemon-grafana-ini
  labels:
    app.kubernetes.io/name: kubemon
    app.kubernetes.io/component: grafana
data:
  grafana.ini: |
    [analytics]
    check_for_updates = true
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/data
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    [users]
    default_theme = light
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubemon-grafana-datasources
  labels:
    app.kubernetes.io/name: kubemon
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - access: browser
      editable: false
      isDefault: false
      name: Jaeger
      type: jaeger
      uid: jaeger
      url: http://simplest-query.tracing:16686
    - access: proxy
      editable: false
      isDefault: false
      jsonData:
          maxLines: 1000
          derivedFields:
            - datasourceUid: jaeger
              matcherRegex: '"(?:traceID|trace_id|TraceId)": "(\w+)"'
              name: TraceID
              url: "$${__value.raw}"
      name: Loki
      type: loki
      url: http://loki.logging:3100
    - access: proxy
      isDefault: true
      name: prometheus
      type: prometheus
      url: http://kube-prometheus-stack-prometheus:9090
      version: 1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubemon-grafana-dashboardproviders
  labels:
    app.kubernetes.io/name: kubemon
data:
  dashboardproviders.yaml: |
    apiVersion: 1
    providers:
    - disableDeletion: false
      editable: true
      folder: ""
      name: default
      options:
        path: /var/lib/grafana/dashboards
      orgId: 1
      type: file
---
apiVersion: v1
kind: Secret
metadata:
  name: kubemon-grafana
  labels:
    app.kubernetes.io/name: kubemon
    app.kubernetes.io/component: grafana
type: Opaque
data:
  # By default, admin-user is set to `admin`
  admin-user: YWRtaW4=
  admin-password: "YWRtaW4yNjc1"
---
apiVersion: v1
kind: Service
metadata:
  name: kubemon-grafana
  labels:
    k8s-app: grafana
    app.kubernetes.io/name: kubemon
    app.kubernetes.io/component: grafana
spec:
  type: NodePort
  ports:
    # Routes port 80 to port 3000 of the Grafana StatefulSet Pods
    - name: http
      port: 80
      protocol: TCP
      targetPort: 3000
      nodePort: 30000
  selector:
    k8s-app: grafana
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kubemon-grafana
  labels: &Labels
    k8s-app: grafana
    app.kubernetes.io/name: kubemon
    app.kubernetes.io/component: grafana
spec:
  serviceName: kubemon-grafana
  replicas: 1
  selector:
    matchLabels: *Labels
  template:
    metadata:
      labels: *Labels
    spec:
      serviceAccountName: grafana
      initContainers:
          - name: "init-chmod-data"
            image: debian:9
            imagePullPolicy: "IfNotPresent"
            command: ["chmod", "777", "/var/lib/grafana"]
            volumeMounts:
            - name: kubemon-grafana-data
              mountPath: "/var/lib/grafana"
      containers:
        - name: grafana
          image: grafana/grafana:9.0.0
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/"
            - name: datasources
              mountPath: "/etc/grafana/provisioning/datasources/"
            - name: dashboardproviders
              mountPath: "/etc/grafana/provisioning/dashboards/"
            - name: kubemon-grafana-data
              mountPath: "/var/lib/grafana"
          ports:
            - name: service
              containerPort: 80
              protocol: TCP
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: kubemon-grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kubemon-grafana
                  key: admin-password
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
            failureThreshold: 10
            periodSeconds: 10
          resources:
            limits:
              cpu: 50m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 100Mi
      volumes:
        - name: config
          configMap:
            name: kubemon-grafana-ini
        - name: datasources
          configMap:
            name: kubemon-grafana-datasources
        - name: dashboardproviders
          configMap:
            name: kubemon-grafana-dashboardproviders
        - name: kubemon-grafana-data
          emptyDir: {}
