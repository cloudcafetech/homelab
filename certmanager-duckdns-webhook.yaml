apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: cert-manager-webhook-duckdns
  name: cert-manager-webhook-duckdns
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: cert-manager-webhook-duckdns
  name: cert-manager-webhook-duckdns:secret-reader
  namespace: cert-manager
rules:
- apiGroups:
  - ""
  resourceNames:
  - cert-manager-webhook-duckdns
  resources:
  - secrets
  verbs:
  - get
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: cert-manager-webhook-duckdns
  name: cert-manager-webhook-duckdns:secret-reader
  namespace: cert-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cert-manager-webhook-duckdns:secret-reader
subjects:
- kind: ServiceAccount
  name: cert-manager-webhook-duckdns
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cert-manager-webhook-duckdns:webhook-authentication-reader
  namespace: kube-system
  labels:
    app: cert-manager-webhook-duckdns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: cert-manager-webhook-duckdns
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: cert-manager-webhook-duckdns
  name: cert-manager-webhook-duckdns:domain-solver
rules:
- apiGroups:
  - acme.duckdns.org
  resources:
  - '*'
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: cert-manager-webhook-duckdns
  name: cert-manager-webhook-duckdns:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: cert-manager-webhook-duckdns
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: cert-manager-webhook-duckdns
  name: cert-manager-webhook-duckdns:domain-solver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-webhook-duckdns:domain-solver
subjects:
- kind: ServiceAccount
  name: cert-manager
  namespace: cert-manager
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app: cert-manager-webhook-duckdns
  name: cert-manager-webhook-duckdns-selfsign
  namespace: cert-manager
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app: cert-manager-webhook-duckdns
  name: cert-manager-webhook-duckdns-ca
  namespace: cert-manager
spec:
  commonName: ca.cert-manager-webhook-duckdns.cert-manager
  duration: 43800h # 5y
  isCA: true
  issuerRef:
    name: cert-manager-webhook-duckdns-selfsign
  secretName: cert-manager-webhook-duckdns-ca
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: cert-manager-webhook-duckdns-ca
  labels:
    app: cert-manager-webhook-duckdns
  name: cert-manager-webhook-duckdns-ca
  namespace: cert-manager
spec:
  ca:
    secretName: cert-manager-webhook-duckdns-ca
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app: cert-manager-webhook-duckdns
  name: cert-manager-webhook-duckdns-webhook-tls
  namespace: cert-manager
spec:
  dnsNames:
  - cert-manager-webhook-duckdns
  - cert-manager-webhook-duckdns.cert-manager
  - cert-manager-webhook-duckdns.cert-manager.svc
  duration: 8760h # 1y
  issuerRef:
    name: cert-manager-webhook-duckdns-ca
  secretName: cert-manager-webhook-duckdns-webhook-tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: cert-manager-webhook-duckdns
  name: cert-manager-webhook-duckdns
  namespace: cert-manager
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app: cert-manager-webhook-duckdns
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cert-manager/cert-manager-webhook-duckdns-webhook-tls
  labels:
    app: cert-manager-webhook-duckdns
  name: v1alpha1.acme.duckdns.org
spec:
  group: acme.duckdns.org
  groupPriorityMinimum: 1000
  versionPriority: 15
  service:
    name: cert-manager-webhook-duckdns
    namespace: cert-manager
    port: 443
  version: v1alpha1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cert-manager-webhook-duckdns
  name: cert-manager-webhook-duckdns
  namespace: cert-manager
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: cert-manager-webhook-duckdns
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cert-manager-webhook-duckdns
    spec:
      containers:
      - args:
        - --tls-cert-file=/tls/tls.crt
        - --tls-private-key-file=/tls/tls.key
        - --v=2
        env:
        - name: GROUP_NAME
          value: acme.duckdns.org
        image: ebrianne/cert-manager-webhook-duckdns:v1.2.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: cert-manager-webhook-duckdns
        ports:
        - containerPort: 443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tls
          name: certs
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: cert-manager-webhook-duckdns
      serviceAccountName: cert-manager-webhook-duckdns
      terminationGracePeriodSeconds: 30
      volumes:
      - name: certs
        secret:
          defaultMode: 420
          secretName: cert-manager-webhook-duckdns-webhook-tls
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: cert-manager-webhook-duckdns
  name: cert-manager-webhook-duckdns
  namespace: cert-manager
type: Opaque
data:
  token: VE9LRU5fREVfRFVDS0ROUw==
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  labels:
    app: cert-manager-webhook-duckdns
  name: cert-manager-webhook-duckdns-production
spec:
  acme:
    email: test@gmail.com
    preferredChain: ISRG Root X1
    privateKeySecretRef:
      name: cert-manager-webhook-duckdns-production
    server: https://acme-v02.api.letsencrypt.org/directory
    solvers:
    - dns01:
        webhook:
          config:
            apiTokenSecretRef:
              key: token
              name: cert-manager-webhook-duckdns
          groupName: acme.duckdns.org
          solverName: duckdns
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  labels:
    app: cert-manager-webhook-duckdns
  name: cert-manager-webhook-duckdns-staging
spec:
  acme:
    email: test@gmail.com
    preferredChain: ISRG Root X1
    privateKeySecretRef:
      name: cert-manager-webhook-duckdns-staging
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    solvers:
    - dns01:
        webhook:
          config:
            apiTokenSecretRef:
              key: token
              name: cert-manager-webhook-duckdns
          groupName: acme.duckdns.org
          solverName: duckdns
